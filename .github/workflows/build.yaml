name: build and push

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    continue-on-error: ${{ matrix.experimental && true || false }}

    strategy:
      fail-fast: true
      matrix:
        arch: [amd64, arm64]
        os: [linux, windows, darwin]
        include:
          - os: windows
            experimental: true
          - os: darwin
            experimental: true

    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          cache: true

      - name: Build
        id: build
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make build

      - name: Compress
        uses: svenstaro/upx-action@v2
        with:
          file: ./build/didem
          strip: false

      - name: Upload
        if: ${{ always() && steps.build.conclusion == 'success' }} # Ignore compression failures
        uses: actions/upload-artifact@v3
        with:
          name: didem_${{ matrix.os }}_${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}
          path: ./build/didem

  docker:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Download
        uses: actions/download-artifact@v3
        with:
          path: app

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: true
      #     platforms: linux/amd64,linux/arm64
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
